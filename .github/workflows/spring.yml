# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

name: Spring CI/CD

on:
  push:
    branches:
      - "*"
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Change to server directory
        run: |
          cd server
          echo "Changed directory to $(pwd)"

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: Build with Maven
        run: |
          cd server
          mvn -B package --file pom.xml

      - name: Run Tests with Maven
        run: |
          cd server 
          mvn -B test --file pom.xml
  deploy:
    # if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: build

    env:
      AWS_INSTANCE_SG_ID: ${{ secrets.AWS_INSTANCE_SG_ID }}
      
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
            aws-access-key-id: ${{ secrets.AWS_EC2_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_EC2_SECRET_ACCESS_KEY }}
            aws-region: us-west-1    

      - name: Get runner IP address
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with: 
          ssh-private-key: ${{ secrets.AWS_EC2_SSH_PRIVATE_KEY }}
      
      - name: Whitelist runner IP address
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id $AWS_INSTANCE_SG_ID \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32    

      - name: SSH into EC2 & Deploy
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@ec2-54-151-20-245.us-west-1.compute.amazonaws.com "/home/ubuntu/deploy.sh"

      - name: Revoke runner IP address
        if: always()
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-id ${{ secrets.AWS_INSTANCE_SG_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32

      
        
